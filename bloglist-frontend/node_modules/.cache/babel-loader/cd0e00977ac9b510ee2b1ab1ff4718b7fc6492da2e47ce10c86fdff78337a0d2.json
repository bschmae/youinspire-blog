{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport loginService from '../services/login';\nimport blogService from './services/blogs';\nconst loginSlice = createSlice({\n  name: 'user',\n  initialState: null,\n  reducers: {\n    setUser(action, state) {\n      return action.payload;\n    }\n  }\n});\nexport const login = () => {\n  return async dispatch => {\n    const user = await loginService.login(username, password);\n    blogService.setToken(user.token);\n    dispatch(setUser(user));\n  };\n};\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","loginService","blogService","loginSlice","name","initialState","reducers","setUser","action","state","payload","login","dispatch","user","username","password","setToken","token","reducer"],"sources":["/Users/williamschmae/Desktop/projects/fullstack/part7/bloglist-v2/bloglist-frontend/src/reducers/loginReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport loginService from '../services/login';\nimport blogService from './services/blogs';\n\nconst loginSlice = createSlice({\n    name: 'user',\n    initialState: null,\n    reducers: {\n        setUser(action, state) {\n            return action.payload;\n        },\n    },\n});\n\nexport const login = () => {\n    return async dispatch => {\n        const user = await loginService.login(username, password);\n        blogService.setToken(user.token)\n        dispatch(setUser(user));\n    }\n}\n\nexport default loginSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC3BI,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;IACNC,OAAO,CAACC,MAAM,EAAEC,KAAK,EAAE;MACnB,OAAOD,MAAM,CAACE,OAAO;IACzB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAG,MAAM;EACvB,OAAO,MAAMC,QAAQ,IAAI;IACrB,MAAMC,IAAI,GAAG,MAAMZ,YAAY,CAACU,KAAK,CAACG,QAAQ,EAAEC,QAAQ,CAAC;IACzDb,WAAW,CAACc,QAAQ,CAACH,IAAI,CAACI,KAAK,CAAC;IAChCL,QAAQ,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC;EAC3B,CAAC;AACL,CAAC;AAED,eAAeV,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}