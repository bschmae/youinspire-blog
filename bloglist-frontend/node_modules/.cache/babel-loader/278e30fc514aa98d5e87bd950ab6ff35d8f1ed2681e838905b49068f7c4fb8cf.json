{"ast":null,"code":"var _jsxFileName = \"/Users/williamschmae/Desktop/projects/fullstack/part7/bloglist-v2/bloglist-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm';\nimport BlogForm from './components/BlogForm';\nimport Notification from './components/Notification';\nimport Toggle from './components/Toggle';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport './App.css';\nimport { setNotification } from './reducers/notificationReducer';\nimport { initializeBlogs } from './reducers/blogReducer';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState([]);\n  const [password, setPassword] = useState([]);\n  const [user, setUser] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n    ;\n  }, []);\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (error) {}\n    ;\n  };\n  const handleLoggout = () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(null);\n  };\n  const handleBlogForm = async (title, author, url) => {\n    try {\n      const blog = await blogService.create({\n        title,\n        author,\n        url\n      });\n      setBlogs(blogs.concat(blog));\n      dispatch(setNotification(`successfuly created blog: ${blog.title}`, 5));\n    } catch (error) {\n      dispatch(setNotification(`${error}`, 5));\n    }\n  };\n  const updateBlog = async blog => {\n    const responseBlog = await blogService.update(blog.id, {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1\n    });\n    const newBlogs = blogs.map(currentBlog => currentBlog.id === blog.id ? {\n      ...currentBlog,\n      likes: currentBlog.likes + 1\n    } : currentBlog);\n    setBlogs(newBlogs);\n  };\n  const deleteBlog = async blog => {\n    try {\n      await blogService.remove(blog.id);\n      const newBlogs = blogs.filter(currentBlog => currentBlog.id !== blog.id);\n      setBlogs(newBlogs);\n      dispatch(setNotification(`successfuly deleted blog: ${blog.title}`, 5));\n    } catch (error) {\n      dispatch(setNotification(`${error}`, 5));\n    }\n    ;\n  };\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log in to application \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n        showLabel: \"login\",\n        hideLabel: \"cancel\",\n        children: /*#__PURE__*/_jsxDEV(LoginForm, {\n          handleLogin: handleLogin,\n          username: username,\n          setUsername: setUsername,\n          password: password,\n          setPassword: setPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [user.username, \" logged in \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoggout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlogForm, {\n      handleBlogForm: handleBlogForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), blogs.sort((a, b) => {\n      return b.likes - a.likes;\n    }).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog,\n      updateBlog: updateBlog,\n      deleteBlog: deleteBlog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YO48ycQl33Y+JQT0fbVwncN9Gxs=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Blog","LoginForm","BlogForm","Notification","Toggle","blogService","loginService","setNotification","initializeBlogs","useDispatch","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","dispatch","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","error","handleLoggout","removeItem","handleBlogForm","title","author","url","blog","create","concat","updateBlog","responseBlog","update","id","likes","newBlogs","map","currentBlog","deleteBlog","remove","filter","sort","a","b"],"sources":["/Users/williamschmae/Desktop/projects/fullstack/part7/bloglist-v2/bloglist-frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm';\nimport BlogForm from './components/BlogForm';\nimport Notification from './components/Notification';\nimport Toggle from './components/Toggle';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport './App.css';\n\nimport { setNotification } from './reducers/notificationReducer';\nimport { initializeBlogs } from './reducers/blogReducer';\nimport { useDispatch } from 'react-redux';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState([]);\n  const [password, setPassword] = useState([]);\n  const [user, setUser] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    };\n  }, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username, password\n      }); \n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      ) \n\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n    };\n  };\n\n  const handleLoggout = () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(null);\n  };\n\n  const handleBlogForm = async (title, author, url) => {\n    try {\n      const blog = await blogService.create({\n        title, \n        author, \n        url,\n      });\n      setBlogs(blogs.concat(blog));\n      dispatch(setNotification(`successfuly created blog: ${blog.title}`, 5));\n    } catch (error) {\n      dispatch(setNotification(`${error}`, 5));\n    }\n  };\n\n  const updateBlog = async (blog) => {\n    const responseBlog = await blogService.update(blog.id, {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1\n    }\n    );\n\n    const newBlogs = blogs.map((currentBlog) => currentBlog.id === blog.id ? \n    { ...currentBlog, likes: currentBlog.likes + 1} : currentBlog);\n\n    setBlogs(newBlogs);\n  \n  };\n  \n  const deleteBlog = async (blog) => {\n    try {\n    await blogService.remove(blog.id);\n\n    const newBlogs = blogs.filter((currentBlog) => currentBlog.id !== blog.id);\n\n    setBlogs(newBlogs);\n    dispatch(setNotification(`successfuly deleted blog: ${blog.title}`, 5))\n\n  } catch (error) {\n    dispatch(setNotification(`${error}`, 5))\n  };\n};\n\n\n  if (user === null) {\n    return (\n    <div>\n      <h1>Log in to application </h1>\n      <Notification  />\n      <Toggle showLabel='login' hideLabel='cancel'>\n        <LoginForm \n          handleLogin={handleLogin}\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword} \n        />\n      </Toggle>\n    </div>\n        )\n      };\n\n  return (\n    <div>     \n      <h1>Blogs</h1> \n      <Notification  />\n      <p>{user.username} logged in <button onClick={handleLoggout}>logout</button></p>\n      <BlogForm handleBlogForm={handleBlogForm}/>\n      {blogs\n      .sort((a, b) => {\n        return b.likes - a.likes\n      })\n      .map(blog =>\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog} deleteBlog={deleteBlog} />\n      )}\n    </div>\n  );\n};\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}