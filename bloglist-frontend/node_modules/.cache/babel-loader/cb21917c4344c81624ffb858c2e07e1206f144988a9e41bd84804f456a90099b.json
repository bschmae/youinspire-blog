{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport userServices from '../services/users';\nimport { setNotification } from '../reducers/notificationReducer';\nconst userSlice = createSlice({\n  name: 'users',\n  initialState: [],\n  reducers: {\n    setUsers(state, action) {\n      return action.payload;\n    },\n    appendUser(state, action) {\n      state.push(action.payload);\n    }\n  }\n});\nexport const {\n  setUsers,\n  appendUser\n} = userSlice.actions;\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await userServices.getAll();\n    dispatch(setUsers(users));\n  };\n};\nexport const createUser = user => {\n  return async dispatch => {\n    try {\n      const newUser = await userServices.create(user);\n      dispatch(appendUser(newUser));\n      dispatch(setNotification('successfully signed up, please login', 5));\n    } catch (error) {\n      console.log(error);\n      dispatch(setNotification(`something went wrong ${error}`, 5));\n    }\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userServices","setNotification","userSlice","name","initialState","reducers","setUsers","state","action","payload","appendUser","push","actions","initializeUsers","dispatch","users","getAll","createUser","user","newUser","create","error","console","log","reducer"],"sources":["/Users/williamschmae/Desktop/projects/fullstack/part7/bloglist-v2/bloglist-frontend/src/reducers/userReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport userServices from '../services/users';\nimport { setNotification } from '../reducers/notificationReducer';\n\nconst userSlice = createSlice({\n    name: 'users',\n    initialState: [],\n    reducers: {\n        setUsers(state, action) {\n            return action.payload;\n        },\n        appendUser(state, action) {\n            state.push(action.payload);\n        }\n    },\n});\n\nexport const { setUsers, appendUser} = userSlice.actions;\n\nexport const initializeUsers = () => {\n    return async dispatch => {\n        const users = await userServices.getAll();\n        dispatch(setUsers(users));\n    };\n};\n\nexport const createUser = (user) => {\n    return async dispatch => {\n        try {\n            const newUser = await userServices.create(user)\n            dispatch(appendUser(newUser))\n            dispatch(setNotification('successfully signed up, please login', 5))\n        } catch (error) {\n            console.log(error)\n            dispatch(setNotification(`something went wrong ${error}`, 5))\n        }\n    };\n};\n\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,SAASC,eAAe,QAAQ,iCAAiC;AAEjE,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACpB,OAAOA,MAAM,CAACC,OAAO;IACzB,CAAC;IACDC,UAAU,CAACH,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACI,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC9B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,QAAQ;EAAEI;AAAU,CAAC,GAAGR,SAAS,CAACU,OAAO;AAExD,OAAO,MAAMC,eAAe,GAAG,MAAM;EACjC,OAAO,MAAMC,QAAQ,IAAI;IACrB,MAAMC,KAAK,GAAG,MAAMf,YAAY,CAACgB,MAAM,EAAE;IACzCF,QAAQ,CAACR,QAAQ,CAACS,KAAK,CAAC,CAAC;EAC7B,CAAC;AACL,CAAC;AAED,OAAO,MAAME,UAAU,GAAIC,IAAI,IAAK;EAChC,OAAO,MAAMJ,QAAQ,IAAI;IACrB,IAAI;MACA,MAAMK,OAAO,GAAG,MAAMnB,YAAY,CAACoB,MAAM,CAACF,IAAI,CAAC;MAC/CJ,QAAQ,CAACJ,UAAU,CAACS,OAAO,CAAC,CAAC;MAC7BL,QAAQ,CAACb,eAAe,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBP,QAAQ,CAACb,eAAe,CAAE,wBAAuBoB,KAAM,EAAC,EAAE,CAAC,CAAC,CAAC;IACjE;EACJ,CAAC;AACL,CAAC;AAED,eAAenB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}