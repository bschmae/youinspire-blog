{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport loginService from '../services/login';\nimport blogService from '../services/blogs';\nconst loginSlice = createSlice({\n  name: 'user',\n  initialState: null,\n  reducers: {\n    setUser(action, state) {\n      return action.payload;\n    }\n  }\n});\nexport const initiliazeUser = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(setUser(user));\n      blogService.setToken(user.token);\n    }\n    ;\n  };\n};\nexport const login = credentials => {\n  return async dispatch => {\n    const user = await loginService.login(credentials);\n    dispatch(setUser(user));\n  };\n};\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","loginService","blogService","loginSlice","name","initialState","reducers","setUser","action","state","payload","initiliazeUser","dispatch","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","setToken","token","login","credentials","reducer"],"sources":["/Users/williamschmae/Desktop/projects/fullstack/part7/bloglist-v2/bloglist-frontend/src/reducers/loginReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport loginService from '../services/login';\nimport blogService from '../services/blogs';\n\nconst loginSlice = createSlice({\n    name: 'user',\n    initialState: null,\n    reducers: {\n        setUser(action, state) {\n            return action.payload;\n        },\n    },\n});\n\nexport const initiliazeUser = () => {\n    return async dispatch => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON);\n            dispatch(setUser(user));\n            blogService.setToken(user.token);\n          };\n\n    };\n};\n\nexport const login = (credentials) => {\n    return async dispatch => {\n        const user = await loginService.login(credentials);\n        dispatch(setUser(user));\n    };\n};\n\nexport default loginSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,WAAW,MAAM,mBAAmB;AAE3C,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC3BI,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;IACNC,OAAO,CAACC,MAAM,EAAEC,KAAK,EAAE;MACnB,OAAOD,MAAM,CAACE,OAAO;IACzB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAG,MAAM;EAChC,OAAO,MAAMC,QAAQ,IAAI;IACrB,MAAMC,cAAc,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;IAEvE,IAAIH,cAAc,EAAE;MAChB,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,cAAc,CAAC;MACvCD,QAAQ,CAACL,OAAO,CAACU,IAAI,CAAC,CAAC;MACvBf,WAAW,CAACkB,QAAQ,CAACH,IAAI,CAACI,KAAK,CAAC;IAClC;IAAC;EAEP,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,KAAK,GAAIC,WAAW,IAAK;EAClC,OAAO,MAAMX,QAAQ,IAAI;IACrB,MAAMK,IAAI,GAAG,MAAMhB,YAAY,CAACqB,KAAK,CAACC,WAAW,CAAC;IAClDX,QAAQ,CAACL,OAAO,CAACU,IAAI,CAAC,CAAC;EAC3B,CAAC;AACL,CAAC;AAED,eAAed,UAAU,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}