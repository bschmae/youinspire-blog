{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport blogService from '../services/blogs';\nconst blogSlice = createSlice({\n  name: 'blog',\n  initialState: [],\n  reducers: {\n    setBlogs(state, action) {\n      return action.payload;\n      console.log(action.payload);\n    }\n  }\n});\nexport const {\n  setBlogs\n} = blogSlice.actions;\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch(setBlogs(blogs));\n  };\n};\nexport default blogSlice.reducer;","map":{"version":3,"names":["createSlice","blogService","blogSlice","name","initialState","reducers","setBlogs","state","action","payload","console","log","actions","initializeBlogs","dispatch","blogs","getAll","reducer"],"sources":["/Users/williamschmae/Desktop/projects/fullstack/part7/bloglist-v2/bloglist-frontend/src/reducers/blogReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport blogService from '../services/blogs';\n\nconst blogSlice = createSlice({\n    name: 'blog',\n    initialState: [],\n    reducers: {\n        setBlogs(state, action) {\n            return action.payload;\n            console.log(action.payload)\n        },\n    },\n});\n\nexport const { setBlogs } = blogSlice.actions;\n\nexport const initializeBlogs = () => {\n    return async dispatch => {\n        const blogs = await blogService.getAll();\n        dispatch(setBlogs(blogs));\n    }\n}\n\nexport default blogSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,mBAAmB;AAE3C,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACpB,OAAOA,MAAM,CAACC,OAAO;MACrBC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACC,OAAO,CAAC;IAC/B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAS,CAAC,GAAGJ,SAAS,CAACU,OAAO;AAE7C,OAAO,MAAMC,eAAe,GAAG,MAAM;EACjC,OAAO,MAAMC,QAAQ,IAAI;IACrB,MAAMC,KAAK,GAAG,MAAMd,WAAW,CAACe,MAAM,EAAE;IACxCF,QAAQ,CAACR,QAAQ,CAACS,KAAK,CAAC,CAAC;EAC7B,CAAC;AACL,CAAC;AAED,eAAeb,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}